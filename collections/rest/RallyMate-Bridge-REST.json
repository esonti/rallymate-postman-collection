{
    "info": {
        "_postman_id": "bridge-rest-collection-corrected",
        "name": "RallyMate Bridge REST API (Corrected)",
        "description": "Bridge Device Management API - Correct URLs and request bodies matching actual HTTP handlers",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "rallymate-bridge-corrected"
    },
    "item": [
        {
            "name": "Bridge Management",
            "item": [
                {
                    "name": "Register Bridge",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has bridge object\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('bridge');",
                                    "    pm.expect(jsonData.bridge).to.have.property('device_id');",
                                    "    pm.expect(jsonData.bridge).to.have.property('facility_id');",
                                    "});",
                                    "",
                                    "// Store bridge_device_id for subsequent requests",
                                    "if (pm.response.code === 201) {",
                                    "    var response = pm.response.json();",
                                    "    pm.environment.set('bridge_device_id', response.bridge.device_id);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"bridge-{{$randomAlphaNumeric}}\",\n    \"name\": \"Main Bridge Device\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/bridges",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Bridge",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has updated bridge\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('bridge');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{bridge_device_id}}\",\n    \"name\": \"Updated Bridge Device\",\n    \"firmware_version\": \"2.1.0\",\n    \"internet_connectivity\": 1,\n    \"mqtt_connectivity\": 1,\n    \"tunnel_connectivity\": 1\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/bridges/{{bridge_device_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges",
                                "{{bridge_device_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Bridges",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has bridges array\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('bridges');",
                                    "    pm.expect(jsonData.bridges).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/bridges?facility_id={{test_facility_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges"
                            ],
                            "query": [
                                {
                                    "key": "facility_id",
                                    "value": "{{test_facility_id}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Unregister Bridge",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response indicates success\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{bridge_device_id}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/bridges/{{bridge_device_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges",
                                "{{bridge_device_id}}"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Edge Connections",
            "item": [
                {
                    "name": "Register Edge Connection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has edge connection\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('edge_connection');",
                                    "    pm.environment.set('edge_device_id', jsonData.edge_connection.edge_device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"bridge_device_id\": \"{{bridge_device_id}}\",\n    \"edge_device_id\": \"camera-{{$randomAlphaNumeric}}\",\n    \"edge_device_type\": \"camera\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/bridges/{{bridge_device_id}}/connections",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges",
                                "{{bridge_device_id}}",
                                "connections"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Edge Connections",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has edge connections\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('edge_connections');",
                                    "    pm.expect(jsonData.edge_connections).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/bridges/{{bridge_device_id}}/connections?facility_id={{test_facility_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges",
                                "{{bridge_device_id}}",
                                "connections"
                            ],
                            "query": [
                                {
                                    "key": "facility_id",
                                    "value": "{{test_facility_id}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Bridge Activities",
            "item": [
                {
                    "name": "Get Bridge Activities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has activities\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('activities');",
                                    "    pm.expect(jsonData.activities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/bridges/{{bridge_device_id}}/activities?facility_id={{test_facility_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "bridges",
                                "{{bridge_device_id}}",
                                "activities"
                            ],
                            "query": [
                                {
                                    "key": "facility_id",
                                    "value": "{{test_facility_id}}"
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{session_token}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "if (!pm.environment.get('test_facility_id')) {",
                    "    pm.environment.set('test_facility_id', '1');",
                    "}",
                    "",
                    "if (!pm.environment.get('bridge_device_id')) {",
                    "    pm.environment.set('bridge_device_id', 'bridge-test-001');",
                    "}"
                ]
            }
        }
    ]
}