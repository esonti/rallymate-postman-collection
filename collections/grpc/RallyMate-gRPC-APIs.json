{
    "info": {
        "_postman_id": "grpc-collection-001",
        "name": "RallyMate gRPC APIs",
        "description": "Complete gRPC API collection for RallyMate - Authentication, Bridge, Cameras, Facilities, Locks, System Support, Users, and Videos services",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "rallymate-grpc"
    },
    "item": [
        {
            "name": "Authentication Service",
            "item": [
                {
                    "name": "Send OTP",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has success and otp_id\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('otp_id');",
                                    "    pm.environment.set('otp_id', response.otp_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"phone_number\": \"{{test_phone_number}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/SendOTP",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "SendOTP"
                            ]
                        }
                    },
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "name": "Verify OTP",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has session token\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('session');",
                                    "    pm.expect(response.session).to.have.property('session_token');",
                                    "    pm.environment.set('session_token', response.session.session_token);",
                                    "    pm.environment.set('user_id', response.session.user_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"otp_id\": {{otp_id}},\n    \"otp_code\": \"{{test_otp_code}}\",\n    \"device_info\": \"Postman gRPC Client\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/VerifyOTP",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "VerifyOTP"
                            ]
                        }
                    }
                },
                {
                    "name": "Validate Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Session is valid\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('valid', true);",
                                    "    pm.expect(response).to.have.property('user_id');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"session_token\": \"{{session_token}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/ValidateSession",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "ValidateSession"
                            ]
                        }
                    }
                },
                {
                    "name": "Logout",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Logout successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/Logout",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "Logout"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Bridge Service",
            "item": [
                {
                    "name": "Register Edge Device",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Edge device registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('device');",
                                    "    pm.environment.set('edge_device_id', response.device.device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"edge-{{$randomAlphaNumeric}}\",\n    \"name\": \"Edge Device 1\",\n    \"location\": \"Court Entrance\",\n    \"ip_address\": \"192.168.1.100\",\n    \"hardware_specs\": {\n        \"cpu\": \"ARM Cortex-A72\",\n        \"memory\": \"8GB\",\n        \"storage\": \"64GB\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/RegisterEdgeDevice",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "RegisterEdgeDevice"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Edge Device Status",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Device status retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('device');",
                                    "    pm.expect(response.device).to.have.property('status');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{edge_device_id}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/GetEdgeDeviceStatus",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "GetEdgeDeviceStatus"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Cameras Service",
            "item": [
                {
                    "name": "Register Camera",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Camera registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('camera');",
                                    "    pm.environment.set('camera_device_id', response.camera.device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"camera-{{$randomAlphaNumeric}}\",\n    \"name\": \"Court Camera 1\",\n    \"location\": \"Center Court\",\n    \"stream_url\": \"rtsp://192.168.1.50:554/stream1\",\n    \"camera_specs\": {\n        \"resolution\": \"1920x1080\",\n        \"frame_rate\": 30,\n        \"field_of_view\": 120\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/RegisterCamera",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "RegisterCamera"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Cameras",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Cameras retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('cameras');",
                                    "    pm.expect(response.cameras).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/GetCameras",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "GetCameras"
                            ]
                        }
                    }
                },
                {
                    "name": "Control Camera",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Camera control successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{camera_device_id}}\",\n    \"action\": \"START_RECORDING\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/ControlCamera",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "ControlCamera"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Locks Service",
            "item": [
                {
                    "name": "Register Lock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('lock');",
                                    "    pm.environment.set('lock_device_id', response.lock.device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"lock-{{$randomAlphaNumeric}}\",\n    \"name\": \"Main Entrance Lock\",\n    \"firmware_version\": \"3.2.1\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/RegisterLock",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "RegisterLock"
                            ]
                        }
                    }
                },
                {
                    "name": "Control Lock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock control successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('new_state');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{lock_device_id}}\",\n    \"action\": \"UNLOCK\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/ControlLock",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "ControlLock"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Lock Activities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock activities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('activities');",
                                    "    pm.expect(response.activities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"device_id\": \"{{lock_device_id}}\",\n    \"page\": 1,\n    \"page_size\": 20\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/GetLockActivities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "GetLockActivities"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Videos Service",
            "item": [
                {
                    "name": "Register Video",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Video registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('video');",
                                    "    pm.environment.set('video_id', response.video.id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"camera_device_id\": \"{{camera_device_id}}\",\n    \"file_name\": \"court_session_{{$timestamp}}.mp4\",\n    \"file_size\": 52428800,\n    \"duration\": 3600,\n    \"format\": \"MP4\",\n    \"resolution\": \"1920x1080\",\n    \"frame_rate\": 30.0,\n    \"storage_path\": \"/videos/court1/{{$timestamp}}/\",\n    \"metadata\": {\n        \"court_number\": \"1\",\n        \"session_type\": \"practice\",\n        \"weather\": \"sunny\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/RegisterVideo",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "RegisterVideo"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Videos",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Videos retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('videos');",
                                    "    pm.expect(response.videos).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/GetVideos",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "GetVideos"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Video Analytics",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Video analytics retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('analytics');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/GetVideoAnalytics",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "GetVideoAnalytics"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Users Service",
            "item": [
                {
                    "name": "Get User Profile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User profile retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('user');",
                                    "    pm.expect(response.user).to.have.property('phone_number');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": {{user_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/GetUserProfile",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "GetUserProfile"
                            ]
                        }
                    }
                },
                {
                    "name": "Update User Profile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Profile update successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user\": {\n        \"id\": {{user_id}},\n        \"first_name\": \"Updated\",\n        \"last_name\": \"Name\",\n        \"email\": \"updated@example.com\"\n    }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/UpdateUserProfile",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "UpdateUserProfile"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Facilities Service",
            "item": [
                {
                    "name": "Get Facilities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facilities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facilities');",
                                    "    pm.expect(response.facilities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/GetFacilities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "GetFacilities"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "System Support Service",
            "item": [
                {
                    "name": "Get System Status",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"System status retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('status');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/system_support.SystemSupportService/GetSystemStatus",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "system_support.SystemSupportService",
                                "GetSystemStatus"
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{session_token}}",
                "type": "string"
            }
        ]
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Auto-populate test data if not present",
                    "if (!pm.environment.get('test_phone_number')) {",
                    "    pm.environment.set('test_phone_number', '+1234567890');",
                    "}",
                    "",
                    "if (!pm.environment.get('test_otp_code')) {",
                    "    pm.environment.set('test_otp_code', '123456');",
                    "}",
                    "",
                    "if (!pm.environment.get('test_facility_id')) {",
                    "    pm.environment.set('test_facility_id', '1');",
                    "}"
                ]
            }
        }
    ]
}