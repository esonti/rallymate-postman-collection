{
    "info": {
        "_postman_id": "grpc-complete-collection-001",
        "name": "RallyMate Complete gRPC APIs",
        "description": "Complete and updated gRPC API collection for RallyMate - All 7 services with comprehensive endpoints based on current implementation",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "rallymate-grpc-complete",
        "version": {
            "major": 2,
            "minor": 0,
            "patch": 0
        }
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{session_token}}",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "key": "grpc_base_url",
            "value": "localhost:50051",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "üîê Authentication Service",
            "description": "Phone number + OTP authentication, JWT session management",
            "item": [
                {
                    "name": "Send OTP",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has success and message\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success');",
                                    "    pm.expect(response).to.have.property('message');",
                                    "    pm.expect(response).to.have.property('expires_at');",
                                    "    console.log('OTP Response:', response);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"phone_number\": \"{{test_phone_number}}\",\n    \"device_info\": \"Postman Test Client\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/SendOTP",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "SendOTP"
                            ]
                        }
                    }
                },
                {
                    "name": "Verify OTP",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Authentication successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('session_token');",
                                    "    pm.expect(response).to.have.property('refresh_token');",
                                    "    pm.expect(response).to.have.property('user');",
                                    "    ",
                                    "    // Store tokens for subsequent requests",
                                    "    pm.environment.set('session_token', response.session_token);",
                                    "    pm.environment.set('refresh_token', response.refresh_token);",
                                    "    pm.environment.set('user_id', response.user.id);",
                                    "    ",
                                    "    console.log('User authenticated:', response.user);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"phone_number\": \"{{test_phone_number}}\",\n    \"otp_code\": \"123456\",\n    \"device_info\": \"Postman Test Client\",\n    \"ip_address\": \"127.0.0.1\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/VerifyOTP",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "VerifyOTP"
                            ]
                        }
                    }
                },
                {
                    "name": "Validate Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Session is valid\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('valid', true);",
                                    "    pm.expect(response).to.have.property('user_id');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"session_token\": \"{{session_token}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/ValidateSession",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "ValidateSession"
                            ]
                        }
                    }
                },
                {
                    "name": "Refresh Session",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Session refreshed\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('session_token');",
                                    "    pm.expect(response).to.have.property('refresh_token');",
                                    "    ",
                                    "    // Update tokens",
                                    "    pm.environment.set('session_token', response.session_token);",
                                    "    pm.environment.set('refresh_token', response.refresh_token);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{refresh_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/RefreshSession",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "RefreshSession"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Sessions retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('sessions');",
                                    "    pm.expect(response.sessions).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": {{user_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/GetUserSessions",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "GetUserSessions"
                            ]
                        }
                    }
                },
                {
                    "name": "Logout",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Logout successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/auth.AuthService/Logout",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "auth.AuthService",
                                "Logout"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üë• Users Service",
            "description": "User account management, profiles, permissions",
            "item": [
                {
                    "name": "Get Users",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Users retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('users');",
                                    "    pm.expect(response.users).to.be.an('array');",
                                    "    pm.expect(response).to.have.property('total_count');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"page\": 1,\n    \"page_size\": 10,\n    \"search\": \"\",\n    \"role_filter\": \"\",\n    \"active_only\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/GetUsers",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "GetUsers"
                            ]
                        }
                    }
                },
                {
                    "name": "Create User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User created\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('user');",
                                    "    pm.expect(response.user).to.have.property('id');",
                                    "    pm.environment.set('created_user_id', response.user.id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"phone_number\": \"+1987654321\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"email\": \"test@example.com\",\n    \"role\": \"USER\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/CreateUser",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "CreateUser"
                            ]
                        }
                    }
                },
                {
                    "name": "Update User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User updated\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('user');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{created_user_id}},\n    \"first_name\": \"Updated Test\",\n    \"last_name\": \"User\",\n    \"email\": \"updated@example.com\",\n    \"is_active\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/UpdateUser",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "UpdateUser"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User deleted\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{created_user_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/DeleteUser",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "DeleteUser"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Membership by Phone",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Membership created\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('membership');",
                                    "    pm.expect(response.membership).to.have.property('id');",
                                    "    pm.environment.set('created_membership_id', response.membership.id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"phone_number\": \"{{test_phone_number}}\",\n    \"facility_id\": {{test_facility_id}},\n    \"role\": \"USER\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/CreateMembershipByPhone",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "CreateMembershipByPhone"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Memberships",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Memberships retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('memberships');",
                                    "    pm.expect(response.memberships).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": {{user_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/users.UsersService/GetUserMemberships",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "users.UsersService",
                                "GetUserMemberships"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üè¢ Facilities Service",
            "description": "Facility management, locations, configurations",
            "item": [
                {
                    "name": "Get Facilities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facilities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facilities');",
                                    "    pm.expect(response.facilities).to.be.an('array');",
                                    "    pm.expect(response).to.have.property('total_count');",
                                    "    ",
                                    "    if (response.facilities.length > 0) {",
                                    "        pm.environment.set('test_facility_id', response.facilities[0].id);",
                                    "    }",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"page\": 1,\n    \"page_size\": 10,\n    \"search\": \"\",\n    \"active_only\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/GetFacilities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "GetFacilities"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Facility",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facility retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facility');",
                                    "    pm.expect(response.facility).to.have.property('id');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{test_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/GetFacility",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "GetFacility"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Facility",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facility created\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facility');",
                                    "    pm.expect(response.facility).to.have.property('id');",
                                    "    pm.environment.set('created_facility_id', response.facility.id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Tennis Club\",\n    \"address\": \"123 Tennis Court Lane, Sports City, SC 12345\",\n    \"description\": \"A premium tennis facility with state-of-the-art courts\",\n    \"timezone\": \"America/New_York\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/CreateFacility",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "CreateFacility"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Facility",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facility updated\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facility');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{created_facility_id}},\n    \"name\": \"Updated Test Tennis Club\",\n    \"address\": \"456 Tennis Avenue, Sports City, SC 12345\",\n    \"description\": \"An updated premium tennis facility\",\n    \"is_active\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/UpdateFacility",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "UpdateFacility"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Facilities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User facilities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('facilities');",
                                    "    pm.expect(response.facilities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": {{user_id}},\n    \"active_only\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/GetUserFacilities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "GetUserFacilities"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete Facility",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Facility deleted\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{created_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/facilities.FacilitiesService/DeleteFacility",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "facilities.FacilitiesService",
                                "DeleteFacility"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üåâ Bridge Service",
            "description": "IoT bridge device management, connectivity monitoring",
            "item": [
                {
                    "name": "Register Bridge",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Bridge registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('bridge_device_id');",
                                    "    pm.environment.set('test_bridge_id', response.bridge_device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"bridge_device_id\": \"bridge-001\",\n    \"facility_id\": {{test_facility_id}},\n    \"name\": \"Test Bridge Device\",\n    \"location\": \"Main Entrance\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/RegisterBridge",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "RegisterBridge"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Bridges",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Bridges retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('bridges');",
                                    "    pm.expect(response.bridges).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/GetBridges",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "GetBridges"
                            ]
                        }
                    }
                },
                {
                    "name": "Register Edge Connection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Edge connection registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"bridge_device_id\": \"{{test_bridge_id}}\",\n    \"edge_device_id\": \"edge-001\",\n    \"device_type\": \"CAMERA\",\n    \"connection_info\": \"192.168.1.100:8080\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/RegisterEdgeConnection",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "RegisterEdgeConnection"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Edge Connections",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Edge connections retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('connections');",
                                    "    pm.expect(response.connections).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"bridge_device_id\": \"{{test_bridge_id}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/bridge.BridgeService/GetEdgeConnections",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "bridge.BridgeService",
                                "GetEdgeConnections"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üìπ Cameras Service",
            "description": "Camera management, streaming, recording",
            "item": [
                {
                    "name": "Register Camera",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Camera registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('device_id');",
                                    "    pm.environment.set('test_camera_id', response.device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"device_id\": \"camera-001\",\n    \"facility_id\": {{test_facility_id}},\n    \"name\": \"Court 1 Camera\",\n    \"location\": \"Tennis Court 1\",\n    \"camera_type\": \"SECURITY\",\n    \"stream_url\": \"rtsp://192.168.1.100:554/stream1\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/RegisterCamera",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "RegisterCamera"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Cameras",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Cameras retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('cameras');",
                                    "    pm.expect(response.cameras).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/GetCameras",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "GetCameras"
                            ]
                        }
                    }
                },
                {
                    "name": "Camera Control",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Camera control successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"device_id\": \"{{test_camera_id}}\",\n    \"command\": \"START_RECORDING\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/CameraControl",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "CameraControl"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Camera Activities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Camera activities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('activities');",
                                    "    pm.expect(response.activities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/cameras.CamerasService/GetCameraActivities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "cameras.CamerasService",
                                "GetCameraActivities"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üîí Locks Service",
            "description": "Electronic lock control, access management",
            "item": [
                {
                    "name": "Register Lock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock registered\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('device_id');",
                                    "    pm.environment.set('test_lock_id', response.device_id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"device_id\": \"lock-001\",\n    \"facility_id\": {{test_facility_id}},\n    \"name\": \"Main Gate Lock\",\n    \"location\": \"Main Entrance Gate\",\n    \"lock_type\": \"MAGNETIC\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/RegisterLock",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "RegisterLock"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Locks",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Locks retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('locks');",
                                    "    pm.expect(response.locks).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/GetLocks",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "GetLocks"
                            ]
                        }
                    }
                },
                {
                    "name": "Lock Control",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock control successful\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "    pm.expect(response).to.have.property('new_state');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"device_id\": \"{{test_lock_id}}\",\n    \"command\": \"UNLOCK\",\n    \"duration_seconds\": 30\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/LockControl",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "LockControl"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Lock Activities",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Lock activities retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('activities');",
                                    "    pm.expect(response.activities).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/locks.LocksService/GetLockActivities",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "locks.LocksService",
                                "GetLockActivities"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üé• Videos Service",
            "description": "Video storage, streaming, playback",
            "item": [
                {
                    "name": "Get Videos",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Videos retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('videos');",
                                    "    pm.expect(response.videos).to.be.an('array');",
                                    "    pm.expect(response).to.have.property('total_count');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/GetVideos",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "GetVideos"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Video",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Video created\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('video');",
                                    "    pm.expect(response.video).to.have.property('id');",
                                    "    pm.environment.set('created_video_id', response.video.id);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"facility_id\": {{test_facility_id}},\n    \"camera_id\": \"{{test_camera_id}}\",\n    \"title\": \"Test Tennis Match Recording\",\n    \"description\": \"Tennis match recording from Court 1\",\n    \"file_path\": \"/videos/tennis-match-001.mp4\",\n    \"duration_seconds\": 3600\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/CreateVideo",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "CreateVideo"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Video",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Video retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('video');",
                                    "    pm.expect(response.video).to.have.property('id');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"id\": {{created_video_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/GetVideo",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "GetVideo"
                            ]
                        }
                    }
                },
                {
                    "name": "Associate Video to User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Video association created\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('success', true);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"video_id\": {{created_video_id}},\n    \"user_id\": {{user_id}}\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/AssociateVideoToUser",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "AssociateVideoToUser"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Videos",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"User videos retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('videos');",
                                    "    pm.expect(response.videos).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": {{user_id}},\n    \"page\": 1,\n    \"page_size\": 10\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/videos.VideosService/GetUserVideos",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "videos.VideosService",
                                "GetUserVideos"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üõ†Ô∏è System Support Service",
            "description": "System monitoring, admin operations, support tools",
            "item": [
                {
                    "name": "Get System Support",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"System status retrieved\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('status');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/system_support.SystemSupportService/GetSystemSupport",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "system_support.SystemSupportService",
                                "GetSystemSupport"
                            ]
                        }
                    }
                },
                {
                    "name": "List Admins",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 0 (OK)\", function () {",
                                    "    pm.expect(pm.response.code).to.equal(0);",
                                    "});",
                                    "",
                                    "pm.test(\"Admins listed\", function () {",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('admins');",
                                    "    pm.expect(response.admins).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/grpc"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{session_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{grpc_base_url}}/system_support.SystemSupportService/ListAdmins",
                            "host": [
                                "{{grpc_base_url}}"
                            ],
                            "path": [
                                "system_support.SystemSupportService",
                                "ListAdmins"
                            ]
                        }
                    }
                }
            ]
        }
    ]
}